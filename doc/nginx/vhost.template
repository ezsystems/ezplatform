
server {
    listen       %PORT%;
    # Further documentation: http://nginx.org/en/docs/http/server_names.html
    server_name  %HOST_LIST%;

    root %BASEDIR%/web;

    # Environment.
    ## Possible values: "prod" and "dev" out-of-the-box, other values possible with proper configuration
    ## Defaults to "prod" if omitted, and forces prod for backend by default as it slows down backend a lot
    set $fc_symfony_env "%SYMFONY_ENV%";
    if ( $uri ~ "^/app\.php/(api/ezp/v2|ez$)" ) {
        set $fc_symfony_env "prod";
    }

    # Additional Assetic rules for eZ Publish 5.1 / 2013.4 and higher.
    ## Don't forget to run php app/console assetic:dump --env=prod
    ## TODO: See if we can somehow still use include, otherwise get rid of ez_prod_rewrite_rules file
    if ( $fc_symfony_env != "dev" ) {
        #include ez_params.d/ez_prod_rewrite_params;
        rewrite "^/css/(.*)\.css" "/css/$1.css" break;
        rewrite "^/js/(.*)\.js" "/js/$1.js" break;
        rewrite "^/font(s?)/(.*)\.ttf" "/font$1/$2.ttf" break;
        rewrite "^/font(s?)/(.*)\.woff" "/font$1/$2.woff" break;
        rewrite "^/font(s?)/(.*)\.otf" "/font$1/$2.otf" break;
        rewrite "^/font(s?)/(.*)\.eot" "/font$1/$2.eot" break;
        rewrite "^/font(s?)/(.*)\.svg" "/font$1/$2.svg" break;
    }

    # Cluster/streamed files rewrite rules. Enable on cluster with DFS as a binary data handler
    #rewrite "^/var/([^/]+/)?storage/images(-versioned)?/(.*)" "/app.php" break;

    # ez rewrite rules
    include ez_params.d/ez_rewrite_params;

    # upload max size
    client_max_body_size %BODY_SIZE_LIMIT_M%;

    # FPM fastcgi_read_timeout
    fastcgi_read_timeout %TIMEOUT_S%;

    location / {
        location ~ ^/app\.php(/|$) {
            include ez_params.d/ez_fastcgi_params;

            # FPM socket
            # Possible values : unix:/var/run/php5-fpm.sock or 127.0.0.1:9000
            fastcgi_pass %FASTCGI_PASS%;

            ## eZ Platform ENVIRONMENT variables, used for customizing app.php execution (not used by console commands)
            # TODO: If possible find way to use variable from root scope to avoid the duplication.
            set $fc_symfony_env "%SYMFONY_ENV%";
            if ( $uri ~ "^/app\.php/(api/ezp/v2|ez$)" ) {
                set $fc_symfony_env "prod";
            }
            fastcgi_param SYMFONY_ENV $fc_symfony_env;

            # Whether to use custom ClassLoader (autoloader) file
            # Needs to be a valid path relative to root web/ directory
            # Defaults to bootstrap.php.cache, or autoload.php in debug
            #if[SYMFONY_CLASSLOADER_FILE] fastcgi_param SYMFONY_CLASSLOADER_FILE "%SYMFONY_CLASSLOADER_FILE%";

            # Whether to use debugging.
            # Possible values: 0 or 1
            # Defaults to 0 if omitted, unless SYMFONY_ENV is set to: "dev"
            #if[SYMFONY_DEBUG] fastcgi_param SYMFONY_DEBUG "%SYMFONY_DEBUG%";

            # Optional: Whether to use Symfony's builtin HTTP Caching Proxy.
            # Disable it if you are using an external reverse proxy (e.g. Varnish)
            # Possible values: 0 or 1
            # Defaults to 1 if omitted, unless SYMFONY_ENV is set to: "dev"
            #if[SYMFONY_HTTP_CACHE] fastcgi_param SYMFONY_HTTP_CACHE "%SYMFONY_HTTP_CACHE%";

            # Optional: Whether to use custom HTTP Cache class if SYMFONY_HTTP_CACHE is enabled
            # Value must be na autoloadable cache class
            # Defaults to "AppCache"
            #if[SYMFONY_HTTP_CACHE_CLASS] fastcgi_param SYMFONY_HTTP_CACHE_CLASS "%SYMFONY_HTTP_CACHE_CLASS%";

            # Optional: Defines the proxies to trust
            # Needed when using Varnish as proxy, if so disable SYMFONY_HTTP_CACHE.
            # Separate entries by a comma, example: "proxy1.example.com,proxy2.example.org"
            # Defaults to not be set if env value is omitted or empty
            #if[SYMFONY_TRUSTED_PROXIES] fastcgi_param SYMFONY_TRUSTED_PROXIES "%SYMFONY_TRUSTED_PROXIES%";
        }
    }

    # Custom logs
    # access_log %BASEDIR%/app/logs/httpd-access.log;
    # error_log  %BASEDIR%/app/logs/httpd-error.log notice;

    include ez_params.d/ez_server_params;
}
