version: '3.3'
# compose file for installing composer packages, perform install and dump database

services:
  install_db:
    image: ${MYSQL_IMAGE}
    volumes:
     - ${COMPOSE_DIR}/entrypoint/mysql:/docker-entrypoint-initdb.d/:ro,cached
    environment:
     - MYSQL_RANDOM_ROOT_PASSWORD=1
     - MYSQL_USER=$DATABASE_USER
     - MYSQL_PASSWORD=$DATABASE_PASSWORD
     - MYSQL_DATABASE=$DATABASE_NAME

  install_app:
    image: ${PHP_IMAGE_DEV}
    volumes:
     - ${COMPOSE_DIR}/../..:/var/www:cached
     - ${COMPOSER_HOME}:/root/.composer:cached
    depends_on:
     - install_db
    environment:
     - COMPOSER_MEMORY_LIMIT
     - SYMFONY_ENV=${SYMFONY_ENV-prod}
     - SYMFONY_DEBUG
     - SYMFONY_CMD
     - DATABASE_USER
     - DATABASE_PASSWORD
     - DATABASE_NAME
     - DATABASE_HOST=install_db
    # Dumping autoload using --optimize-autoloader to keep performenace on a usable level, not needed on linux host.
    # Second chown line:  For dev and behat tests we give a bit extra rights, never do this for prod.
    command: >
      /bin/sh -c "
      for i in $$(seq 1 3); do composer install --no-progress --no-interaction --prefer-dist --no-suggest --optimize-autoloader && s=0 && break || s=$$? && sleep 1; done; (exit $$s);
      mkdir -p web/var;
      php /scripts/wait_for_db.php;
      composer ezplatform-install;
      if [ \"$SYMFONY_CMD\" != '' ]; then echo '> Executing' \"$SYMFONY_CMD\"; php bin/console $SYMFONY_CMD; fi;
      rm -Rf var/logs/* var/cache/*/*;
      chown -R www-data:www-data var/cache var/logs web/var;
      find var/cache var/logs web/var -type d -print0 | xargs -0 chmod -R 775;
      find var/cache var/logs web/var -type f -print0 | xargs -0 chmod -R 664;
      chown -R www-data:www-data app/config src;
      echo 'Dumping database into doc/docker/entrypoint/mysql/2_dump.sql for use by mysql on startup.';
      mysqldump -u $$DATABASE_USER --password=$$DATABASE_PASSWORD -h $$DATABASE_HOST --add-drop-table --extended-insert  --protocol=tcp $$DATABASE_NAME > doc/docker/entrypoint/mysql/2_dump.sql"
